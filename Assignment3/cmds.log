Assignment 3 Report:

Task 1:

Command(s) used to solve: 
1. wc -l last.fake
2. grep "f23" last.fake > lastf23.fake
3. wc -l lastf23.fake

Output of Command:
1. 2162 last.fake
2. [No output, the command simply creates/overwrites the file lastf23.fake]
3. 239 lastf23.fake

Task 2:

Command(s) used to solve:
1. grep "Sun" lastf23.fake | awk 'BEGIN {print "The list of people who worked on Sunday are:"} !seen[$1]++ {names[n++] = $1} END {asort(names); for(i=1; i<=n; i++) print names[i]; print "Kudos to these people for putting in the work"}'

Output of Command:
The list of people who worked on Sunday are:
jewonf23
saniaf23
tienf23
Kudos to these people for putting in the work

Task 3:

Command(s) used to solve:
1. awk '$7 >= "23:00" || $7 <= "04:00"' lastf23.fake | awk 'BEGIN {print "Night Owls List:"} !seen[$1]++ {names[n++] = $1} END {asort(names); for(i=1; i<=n; i++) print names[i]; print "Night Owls are dope. Please ensure you get enough sleep though."}'


Output of Command:
Night Owls List:
aaronf23
anasf23
divijf23
hamzaf23
hof23
jamesf23
junf23
kobef23
maximf23
rahulf23
rikkif23
saniaf23
thif23
tienf23
Night Owls are dope. Please ensure you get enough sleep though.

Task 4:

Command(s) used to solve:
1. awk '$7 >= "05:00" && $7 <= "09:00"' lastf23.fake | awk 'BEGIN {print "Early Birds List:"} !seen[$1]++ {names[n++] = $1} END {asort(names); for(i=1; i<=n; i++) print names[i]; print "Early Birds are dope. Please ensure you get enough sleep though."}'

Output of Command:
Early Birds List:
hamzaf23
hof23
saniaf23
thif23
tienf23
Early Birds are dope. Please ensure you get enough sleep though.

Task 5:

Command(s) used to solve:
1. awk '/^t/ {print $1}' lastf23.fake

Output of Command:
[List of usernames starting with "t"]
thif23
thif23
thif23
tienf23
tienf23
tienf23
tienf23
tienf23
thif23
tienf23
tienf23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
tienf23
tienf23
tienf23
thif23
thif23
thif23
thif23
thif23
thif23
tienf23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
thif23
tienf23
tienf23
tienf23
tienf23

Task 6:

Command(s) used to solve:
1. awk -F: '/^a/ && $3 % 2 == 0 {print $1}' passwd.fake

Output of Command:
[List of usernames starting with 'a' and UID divisible by 2]
Nothing in this case

Task 7:

Command(s) used to solve:
1. sed 's/[a-zA-Z0-9 ]//g' passwd.fake | sort -u

Output of Command:
[List of distinct lines after deleting all letters, digits, and spaces]
{"":{"":,"":{"":{"":[{"":".","":"/.","":""},{"":".","":"/.","":""},{"":".","":"/.","":""}],"":},"":{"":[{"":"","":"","":""},{"":".","":".","":""},{"":".","":".","":""},{"":".","":".","":""},{"":"-.","":"-.","":""}],"":}},"":.,"":[],"":,"":{"":,"":"","":"","":"","":,"":,"":,"":"--::.","":"://..//?=","":,"":,"":},"":,"":,"":{"":"","":":.","":,"":"","":""},"":"/.","":,"":{
